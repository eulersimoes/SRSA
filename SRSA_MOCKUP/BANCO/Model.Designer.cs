//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("planeinfoModel", "FK_PLANE_CONFIG_BATTERY", "BATTERY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BANCO.BATTERY), "PLANE_CONFIG", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BANCO.PLANE_CONFIG), true)]
[assembly: EdmRelationshipAttribute("planeinfoModel", "FK_PLANE_CONFIG_ENGINE", "ENGINE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BANCO.ENGINE), "PLANE_CONFIG", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BANCO.PLANE_CONFIG), true)]
[assembly: EdmRelationshipAttribute("planeinfoModel", "FK_PLANE_CONFIG_ESC", "ESC", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BANCO.ESC), "PLANE_CONFIG", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BANCO.PLANE_CONFIG), true)]
[assembly: EdmRelationshipAttribute("planeinfoModel", "FK_FLIGHT_DATA_FLIGHT", "FLIGHT", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BANCO.FLIGHT), "FLIGHT_DATA", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BANCO.FLIGHT_DATA), true)]
[assembly: EdmRelationshipAttribute("planeinfoModel", "FK_FLIGHT_PLANE_CONFIG", "PLANE_CONFIG", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BANCO.PLANE_CONFIG), "FLIGHT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BANCO.FLIGHT), true)]
[assembly: EdmRelationshipAttribute("planeinfoModel", "FK_PLANE_CONFIG_PLANE", "PLANE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BANCO.PLANE), "PLANE_CONFIG", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BANCO.PLANE_CONFIG), true)]
[assembly: EdmRelationshipAttribute("planeinfoModel", "FK_PLANE_CONFIG_RADIO", "RADIO", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BANCO.RADIO), "PLANE_CONFIG", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BANCO.PLANE_CONFIG), true)]

#endregion

namespace BANCO
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class planeinfoEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new planeinfoEntities object using the connection string found in the 'planeinfoEntities' section of the application configuration file.
        /// </summary>
        public planeinfoEntities() : base("name=planeinfoEntities", "planeinfoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new planeinfoEntities object.
        /// </summary>
        public planeinfoEntities(string connectionString) : base(connectionString, "planeinfoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new planeinfoEntities object.
        /// </summary>
        public planeinfoEntities(EntityConnection connection) : base(connection, "planeinfoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BATTERY> BATTERY
        {
            get
            {
                if ((_BATTERY == null))
                {
                    _BATTERY = base.CreateObjectSet<BATTERY>("BATTERY");
                }
                return _BATTERY;
            }
        }
        private ObjectSet<BATTERY> _BATTERY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ENGINE> ENGINE
        {
            get
            {
                if ((_ENGINE == null))
                {
                    _ENGINE = base.CreateObjectSet<ENGINE>("ENGINE");
                }
                return _ENGINE;
            }
        }
        private ObjectSet<ENGINE> _ENGINE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ESC> ESC
        {
            get
            {
                if ((_ESC == null))
                {
                    _ESC = base.CreateObjectSet<ESC>("ESC");
                }
                return _ESC;
            }
        }
        private ObjectSet<ESC> _ESC;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FLIGHT> FLIGHT
        {
            get
            {
                if ((_FLIGHT == null))
                {
                    _FLIGHT = base.CreateObjectSet<FLIGHT>("FLIGHT");
                }
                return _FLIGHT;
            }
        }
        private ObjectSet<FLIGHT> _FLIGHT;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FLIGHT_DATA> FLIGHT_DATA
        {
            get
            {
                if ((_FLIGHT_DATA == null))
                {
                    _FLIGHT_DATA = base.CreateObjectSet<FLIGHT_DATA>("FLIGHT_DATA");
                }
                return _FLIGHT_DATA;
            }
        }
        private ObjectSet<FLIGHT_DATA> _FLIGHT_DATA;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PLANE> PLANE
        {
            get
            {
                if ((_PLANE == null))
                {
                    _PLANE = base.CreateObjectSet<PLANE>("PLANE");
                }
                return _PLANE;
            }
        }
        private ObjectSet<PLANE> _PLANE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PLANE_CONFIG> PLANE_CONFIG
        {
            get
            {
                if ((_PLANE_CONFIG == null))
                {
                    _PLANE_CONFIG = base.CreateObjectSet<PLANE_CONFIG>("PLANE_CONFIG");
                }
                return _PLANE_CONFIG;
            }
        }
        private ObjectSet<PLANE_CONFIG> _PLANE_CONFIG;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RADIO> RADIO
        {
            get
            {
                if ((_RADIO == null))
                {
                    _RADIO = base.CreateObjectSet<RADIO>("RADIO");
                }
                return _RADIO;
            }
        }
        private ObjectSet<RADIO> _RADIO;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BATTERY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBATTERY(BATTERY bATTERY)
        {
            base.AddObject("BATTERY", bATTERY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ENGINE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToENGINE(ENGINE eNGINE)
        {
            base.AddObject("ENGINE", eNGINE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ESC EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToESC(ESC eSC)
        {
            base.AddObject("ESC", eSC);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FLIGHT EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFLIGHT(FLIGHT fLIGHT)
        {
            base.AddObject("FLIGHT", fLIGHT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FLIGHT_DATA EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFLIGHT_DATA(FLIGHT_DATA fLIGHT_DATA)
        {
            base.AddObject("FLIGHT_DATA", fLIGHT_DATA);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PLANE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPLANE(PLANE pLANE)
        {
            base.AddObject("PLANE", pLANE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PLANE_CONFIG EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPLANE_CONFIG(PLANE_CONFIG pLANE_CONFIG)
        {
            base.AddObject("PLANE_CONFIG", pLANE_CONFIG);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RADIO EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRADIO(RADIO rADIO)
        {
            base.AddObject("RADIO", rADIO);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="planeinfoModel", Name="BATTERY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BATTERY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BATTERY object.
        /// </summary>
        /// <param name="iD_BATTERY">Initial value of the ID_BATTERY property.</param>
        /// <param name="dESC">Initial value of the DESC property.</param>
        /// <param name="cAPACITY_MHA">Initial value of the CAPACITY_MHA property.</param>
        /// <param name="cELLS">Initial value of the CELLS property.</param>
        public static BATTERY CreateBATTERY(global::System.Int32 iD_BATTERY, global::System.String dESC, global::System.Int32 cAPACITY_MHA, global::System.Int32 cELLS)
        {
            BATTERY bATTERY = new BATTERY();
            bATTERY.ID_BATTERY = iD_BATTERY;
            bATTERY.DESC = dESC;
            bATTERY.CAPACITY_MHA = cAPACITY_MHA;
            bATTERY.CELLS = cELLS;
            return bATTERY;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_BATTERY
        {
            get
            {
                return _ID_BATTERY;
            }
            set
            {
                if (_ID_BATTERY != value)
                {
                    OnID_BATTERYChanging(value);
                    ReportPropertyChanging("ID_BATTERY");
                    _ID_BATTERY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_BATTERY");
                    OnID_BATTERYChanged();
                }
            }
        }
        private global::System.Int32 _ID_BATTERY;
        partial void OnID_BATTERYChanging(global::System.Int32 value);
        partial void OnID_BATTERYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DESC
        {
            get
            {
                return _DESC;
            }
            set
            {
                OnDESCChanging(value);
                ReportPropertyChanging("DESC");
                _DESC = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DESC");
                OnDESCChanged();
            }
        }
        private global::System.String _DESC;
        partial void OnDESCChanging(global::System.String value);
        partial void OnDESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CAPACITY_MHA
        {
            get
            {
                return _CAPACITY_MHA;
            }
            set
            {
                OnCAPACITY_MHAChanging(value);
                ReportPropertyChanging("CAPACITY_MHA");
                _CAPACITY_MHA = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CAPACITY_MHA");
                OnCAPACITY_MHAChanged();
            }
        }
        private global::System.Int32 _CAPACITY_MHA;
        partial void OnCAPACITY_MHAChanging(global::System.Int32 value);
        partial void OnCAPACITY_MHAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CELLS
        {
            get
            {
                return _CELLS;
            }
            set
            {
                OnCELLSChanging(value);
                ReportPropertyChanging("CELLS");
                _CELLS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CELLS");
                OnCELLSChanged();
            }
        }
        private global::System.Int32 _CELLS;
        partial void OnCELLSChanging(global::System.Int32 value);
        partial void OnCELLSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NETDUINO_CORRECT_FACTOR
        {
            get
            {
                return _NETDUINO_CORRECT_FACTOR;
            }
            set
            {
                OnNETDUINO_CORRECT_FACTORChanging(value);
                ReportPropertyChanging("NETDUINO_CORRECT_FACTOR");
                _NETDUINO_CORRECT_FACTOR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NETDUINO_CORRECT_FACTOR");
                OnNETDUINO_CORRECT_FACTORChanged();
            }
        }
        private Nullable<global::System.Decimal> _NETDUINO_CORRECT_FACTOR;
        partial void OnNETDUINO_CORRECT_FACTORChanging(Nullable<global::System.Decimal> value);
        partial void OnNETDUINO_CORRECT_FACTORChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> VOLTS
        {
            get
            {
                return _VOLTS;
            }
            set
            {
                OnVOLTSChanging(value);
                ReportPropertyChanging("VOLTS");
                _VOLTS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VOLTS");
                OnVOLTSChanged();
            }
        }
        private Nullable<global::System.Decimal> _VOLTS;
        partial void OnVOLTSChanging(Nullable<global::System.Decimal> value);
        partial void OnVOLTSChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("planeinfoModel", "FK_PLANE_CONFIG_BATTERY", "PLANE_CONFIG")]
        public EntityCollection<PLANE_CONFIG> PLANE_CONFIG
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PLANE_CONFIG>("planeinfoModel.FK_PLANE_CONFIG_BATTERY", "PLANE_CONFIG");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PLANE_CONFIG>("planeinfoModel.FK_PLANE_CONFIG_BATTERY", "PLANE_CONFIG", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="planeinfoModel", Name="ENGINE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ENGINE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ENGINE object.
        /// </summary>
        /// <param name="iD_ENGINE">Initial value of the ID_ENGINE property.</param>
        /// <param name="dESC">Initial value of the DESC property.</param>
        public static ENGINE CreateENGINE(global::System.Int32 iD_ENGINE, global::System.String dESC)
        {
            ENGINE eNGINE = new ENGINE();
            eNGINE.ID_ENGINE = iD_ENGINE;
            eNGINE.DESC = dESC;
            return eNGINE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_ENGINE
        {
            get
            {
                return _ID_ENGINE;
            }
            set
            {
                if (_ID_ENGINE != value)
                {
                    OnID_ENGINEChanging(value);
                    ReportPropertyChanging("ID_ENGINE");
                    _ID_ENGINE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_ENGINE");
                    OnID_ENGINEChanged();
                }
            }
        }
        private global::System.Int32 _ID_ENGINE;
        partial void OnID_ENGINEChanging(global::System.Int32 value);
        partial void OnID_ENGINEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DESC
        {
            get
            {
                return _DESC;
            }
            set
            {
                OnDESCChanging(value);
                ReportPropertyChanging("DESC");
                _DESC = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DESC");
                OnDESCChanged();
            }
        }
        private global::System.String _DESC;
        partial void OnDESCChanging(global::System.String value);
        partial void OnDESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> KV
        {
            get
            {
                return _KV;
            }
            set
            {
                OnKVChanging(value);
                ReportPropertyChanging("KV");
                _KV = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KV");
                OnKVChanged();
            }
        }
        private Nullable<global::System.Int32> _KV;
        partial void OnKVChanging(Nullable<global::System.Int32> value);
        partial void OnKVChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("planeinfoModel", "FK_PLANE_CONFIG_ENGINE", "PLANE_CONFIG")]
        public EntityCollection<PLANE_CONFIG> PLANE_CONFIG
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PLANE_CONFIG>("planeinfoModel.FK_PLANE_CONFIG_ENGINE", "PLANE_CONFIG");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PLANE_CONFIG>("planeinfoModel.FK_PLANE_CONFIG_ENGINE", "PLANE_CONFIG", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="planeinfoModel", Name="ESC")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ESC : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ESC object.
        /// </summary>
        /// <param name="iD_ESC">Initial value of the ID_ESC property.</param>
        /// <param name="dESC">Initial value of the DESC property.</param>
        /// <param name="aMPER">Initial value of the AMPER property.</param>
        public static ESC CreateESC(global::System.Int32 iD_ESC, global::System.String dESC, global::System.Int32 aMPER)
        {
            ESC eSC = new ESC();
            eSC.ID_ESC = iD_ESC;
            eSC.DESC = dESC;
            eSC.AMPER = aMPER;
            return eSC;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_ESC
        {
            get
            {
                return _ID_ESC;
            }
            set
            {
                if (_ID_ESC != value)
                {
                    OnID_ESCChanging(value);
                    ReportPropertyChanging("ID_ESC");
                    _ID_ESC = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_ESC");
                    OnID_ESCChanged();
                }
            }
        }
        private global::System.Int32 _ID_ESC;
        partial void OnID_ESCChanging(global::System.Int32 value);
        partial void OnID_ESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DESC
        {
            get
            {
                return _DESC;
            }
            set
            {
                OnDESCChanging(value);
                ReportPropertyChanging("DESC");
                _DESC = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DESC");
                OnDESCChanged();
            }
        }
        private global::System.String _DESC;
        partial void OnDESCChanging(global::System.String value);
        partial void OnDESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AMPER
        {
            get
            {
                return _AMPER;
            }
            set
            {
                OnAMPERChanging(value);
                ReportPropertyChanging("AMPER");
                _AMPER = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AMPER");
                OnAMPERChanged();
            }
        }
        private global::System.Int32 _AMPER;
        partial void OnAMPERChanging(global::System.Int32 value);
        partial void OnAMPERChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("planeinfoModel", "FK_PLANE_CONFIG_ESC", "PLANE_CONFIG")]
        public EntityCollection<PLANE_CONFIG> PLANE_CONFIG
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PLANE_CONFIG>("planeinfoModel.FK_PLANE_CONFIG_ESC", "PLANE_CONFIG");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PLANE_CONFIG>("planeinfoModel.FK_PLANE_CONFIG_ESC", "PLANE_CONFIG", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="planeinfoModel", Name="FLIGHT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FLIGHT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FLIGHT object.
        /// </summary>
        /// <param name="iD_FLIGHT">Initial value of the ID_FLIGHT property.</param>
        /// <param name="dT_FLIGHT">Initial value of the DT_FLIGHT property.</param>
        /// <param name="dESC">Initial value of the DESC property.</param>
        /// <param name="dT_START">Initial value of the DT_START property.</param>
        /// <param name="dT_END">Initial value of the DT_END property.</param>
        /// <param name="iD_CONFIG">Initial value of the ID_CONFIG property.</param>
        public static FLIGHT CreateFLIGHT(global::System.Int32 iD_FLIGHT, global::System.DateTime dT_FLIGHT, global::System.String dESC, global::System.DateTime dT_START, global::System.DateTime dT_END, global::System.Int32 iD_CONFIG)
        {
            FLIGHT fLIGHT = new FLIGHT();
            fLIGHT.ID_FLIGHT = iD_FLIGHT;
            fLIGHT.DT_FLIGHT = dT_FLIGHT;
            fLIGHT.DESC = dESC;
            fLIGHT.DT_START = dT_START;
            fLIGHT.DT_END = dT_END;
            fLIGHT.ID_CONFIG = iD_CONFIG;
            return fLIGHT;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_FLIGHT
        {
            get
            {
                return _ID_FLIGHT;
            }
            set
            {
                if (_ID_FLIGHT != value)
                {
                    OnID_FLIGHTChanging(value);
                    ReportPropertyChanging("ID_FLIGHT");
                    _ID_FLIGHT = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_FLIGHT");
                    OnID_FLIGHTChanged();
                }
            }
        }
        private global::System.Int32 _ID_FLIGHT;
        partial void OnID_FLIGHTChanging(global::System.Int32 value);
        partial void OnID_FLIGHTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DT_FLIGHT
        {
            get
            {
                return _DT_FLIGHT;
            }
            set
            {
                OnDT_FLIGHTChanging(value);
                ReportPropertyChanging("DT_FLIGHT");
                _DT_FLIGHT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DT_FLIGHT");
                OnDT_FLIGHTChanged();
            }
        }
        private global::System.DateTime _DT_FLIGHT;
        partial void OnDT_FLIGHTChanging(global::System.DateTime value);
        partial void OnDT_FLIGHTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DESC
        {
            get
            {
                return _DESC;
            }
            set
            {
                OnDESCChanging(value);
                ReportPropertyChanging("DESC");
                _DESC = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DESC");
                OnDESCChanged();
            }
        }
        private global::System.String _DESC;
        partial void OnDESCChanging(global::System.String value);
        partial void OnDESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DT_START
        {
            get
            {
                return _DT_START;
            }
            set
            {
                OnDT_STARTChanging(value);
                ReportPropertyChanging("DT_START");
                _DT_START = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DT_START");
                OnDT_STARTChanged();
            }
        }
        private global::System.DateTime _DT_START;
        partial void OnDT_STARTChanging(global::System.DateTime value);
        partial void OnDT_STARTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DT_END
        {
            get
            {
                return _DT_END;
            }
            set
            {
                OnDT_ENDChanging(value);
                ReportPropertyChanging("DT_END");
                _DT_END = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DT_END");
                OnDT_ENDChanged();
            }
        }
        private global::System.DateTime _DT_END;
        partial void OnDT_ENDChanging(global::System.DateTime value);
        partial void OnDT_ENDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_CONFIG
        {
            get
            {
                return _ID_CONFIG;
            }
            set
            {
                OnID_CONFIGChanging(value);
                ReportPropertyChanging("ID_CONFIG");
                _ID_CONFIG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID_CONFIG");
                OnID_CONFIGChanged();
            }
        }
        private global::System.Int32 _ID_CONFIG;
        partial void OnID_CONFIGChanging(global::System.Int32 value);
        partial void OnID_CONFIGChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("planeinfoModel", "FK_FLIGHT_DATA_FLIGHT", "FLIGHT_DATA")]
        public EntityCollection<FLIGHT_DATA> FLIGHT_DATA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FLIGHT_DATA>("planeinfoModel.FK_FLIGHT_DATA_FLIGHT", "FLIGHT_DATA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FLIGHT_DATA>("planeinfoModel.FK_FLIGHT_DATA_FLIGHT", "FLIGHT_DATA", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("planeinfoModel", "FK_FLIGHT_PLANE_CONFIG", "PLANE_CONFIG")]
        public PLANE_CONFIG PLANE_CONFIG
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PLANE_CONFIG>("planeinfoModel.FK_FLIGHT_PLANE_CONFIG", "PLANE_CONFIG").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PLANE_CONFIG>("planeinfoModel.FK_FLIGHT_PLANE_CONFIG", "PLANE_CONFIG").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PLANE_CONFIG> PLANE_CONFIGReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PLANE_CONFIG>("planeinfoModel.FK_FLIGHT_PLANE_CONFIG", "PLANE_CONFIG");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PLANE_CONFIG>("planeinfoModel.FK_FLIGHT_PLANE_CONFIG", "PLANE_CONFIG", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="planeinfoModel", Name="FLIGHT_DATA")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FLIGHT_DATA : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FLIGHT_DATA object.
        /// </summary>
        /// <param name="sEQ">Initial value of the SEQ property.</param>
        /// <param name="dATE_REG">Initial value of the DATE_REG property.</param>
        /// <param name="iD_FLIGHT">Initial value of the ID_FLIGHT property.</param>
        public static FLIGHT_DATA CreateFLIGHT_DATA(global::System.Int32 sEQ, global::System.DateTime dATE_REG, global::System.Int32 iD_FLIGHT)
        {
            FLIGHT_DATA fLIGHT_DATA = new FLIGHT_DATA();
            fLIGHT_DATA.SEQ = sEQ;
            fLIGHT_DATA.DATE_REG = dATE_REG;
            fLIGHT_DATA.ID_FLIGHT = iD_FLIGHT;
            return fLIGHT_DATA;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SEQ
        {
            get
            {
                return _SEQ;
            }
            set
            {
                if (_SEQ != value)
                {
                    OnSEQChanging(value);
                    ReportPropertyChanging("SEQ");
                    _SEQ = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SEQ");
                    OnSEQChanged();
                }
            }
        }
        private global::System.Int32 _SEQ;
        partial void OnSEQChanging(global::System.Int32 value);
        partial void OnSEQChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATE_REG
        {
            get
            {
                return _DATE_REG;
            }
            set
            {
                OnDATE_REGChanging(value);
                ReportPropertyChanging("DATE_REG");
                _DATE_REG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATE_REG");
                OnDATE_REGChanged();
            }
        }
        private global::System.DateTime _DATE_REG;
        partial void OnDATE_REGChanging(global::System.DateTime value);
        partial void OnDATE_REGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> VELOCIDADE
        {
            get
            {
                return _VELOCIDADE;
            }
            set
            {
                OnVELOCIDADEChanging(value);
                ReportPropertyChanging("VELOCIDADE");
                _VELOCIDADE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VELOCIDADE");
                OnVELOCIDADEChanged();
            }
        }
        private Nullable<global::System.Decimal> _VELOCIDADE;
        partial void OnVELOCIDADEChanging(Nullable<global::System.Decimal> value);
        partial void OnVELOCIDADEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BATTERY_LEVEL
        {
            get
            {
                return _BATTERY_LEVEL;
            }
            set
            {
                OnBATTERY_LEVELChanging(value);
                ReportPropertyChanging("BATTERY_LEVEL");
                _BATTERY_LEVEL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BATTERY_LEVEL");
                OnBATTERY_LEVELChanged();
            }
        }
        private Nullable<global::System.Int32> _BATTERY_LEVEL;
        partial void OnBATTERY_LEVELChanging(Nullable<global::System.Int32> value);
        partial void OnBATTERY_LEVELChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ALTITUDE
        {
            get
            {
                return _ALTITUDE;
            }
            set
            {
                OnALTITUDEChanging(value);
                ReportPropertyChanging("ALTITUDE");
                _ALTITUDE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ALTITUDE");
                OnALTITUDEChanged();
            }
        }
        private Nullable<global::System.Decimal> _ALTITUDE;
        partial void OnALTITUDEChanging(Nullable<global::System.Decimal> value);
        partial void OnALTITUDEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LATITUDE
        {
            get
            {
                return _LATITUDE;
            }
            set
            {
                OnLATITUDEChanging(value);
                ReportPropertyChanging("LATITUDE");
                _LATITUDE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LATITUDE");
                OnLATITUDEChanged();
            }
        }
        private Nullable<global::System.Decimal> _LATITUDE;
        partial void OnLATITUDEChanging(Nullable<global::System.Decimal> value);
        partial void OnLATITUDEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LONGITUDE
        {
            get
            {
                return _LONGITUDE;
            }
            set
            {
                OnLONGITUDEChanging(value);
                ReportPropertyChanging("LONGITUDE");
                _LONGITUDE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LONGITUDE");
                OnLONGITUDEChanged();
            }
        }
        private Nullable<global::System.Decimal> _LONGITUDE;
        partial void OnLONGITUDEChanging(Nullable<global::System.Decimal> value);
        partial void OnLONGITUDEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AOA
        {
            get
            {
                return _AOA;
            }
            set
            {
                OnAOAChanging(value);
                ReportPropertyChanging("AOA");
                _AOA = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AOA");
                OnAOAChanged();
            }
        }
        private Nullable<global::System.Int32> _AOA;
        partial void OnAOAChanging(Nullable<global::System.Int32> value);
        partial void OnAOAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RA
        {
            get
            {
                return _RA;
            }
            set
            {
                OnRAChanging(value);
                ReportPropertyChanging("RA");
                _RA = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RA");
                OnRAChanged();
            }
        }
        private Nullable<global::System.Int32> _RA;
        partial void OnRAChanging(Nullable<global::System.Int32> value);
        partial void OnRAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_FLIGHT
        {
            get
            {
                return _ID_FLIGHT;
            }
            set
            {
                OnID_FLIGHTChanging(value);
                ReportPropertyChanging("ID_FLIGHT");
                _ID_FLIGHT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID_FLIGHT");
                OnID_FLIGHTChanged();
            }
        }
        private global::System.Int32 _ID_FLIGHT;
        partial void OnID_FLIGHTChanging(global::System.Int32 value);
        partial void OnID_FLIGHTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HDG
        {
            get
            {
                return _HDG;
            }
            set
            {
                OnHDGChanging(value);
                ReportPropertyChanging("HDG");
                _HDG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HDG");
                OnHDGChanged();
            }
        }
        private Nullable<global::System.Int32> _HDG;
        partial void OnHDGChanging(Nullable<global::System.Int32> value);
        partial void OnHDGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FUEL_LEVEL
        {
            get
            {
                return _FUEL_LEVEL;
            }
            set
            {
                OnFUEL_LEVELChanging(value);
                ReportPropertyChanging("FUEL_LEVEL");
                _FUEL_LEVEL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FUEL_LEVEL");
                OnFUEL_LEVELChanged();
            }
        }
        private Nullable<global::System.Int32> _FUEL_LEVEL;
        partial void OnFUEL_LEVELChanging(Nullable<global::System.Int32> value);
        partial void OnFUEL_LEVELChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AUTOPILOT
        {
            get
            {
                return _AUTOPILOT;
            }
            set
            {
                OnAUTOPILOTChanging(value);
                ReportPropertyChanging("AUTOPILOT");
                _AUTOPILOT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AUTOPILOT");
                OnAUTOPILOTChanged();
            }
        }
        private global::System.String _AUTOPILOT;
        partial void OnAUTOPILOTChanging(global::System.String value);
        partial void OnAUTOPILOTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PROXIMO_WAY_POINT
        {
            get
            {
                return _PROXIMO_WAY_POINT;
            }
            set
            {
                OnPROXIMO_WAY_POINTChanging(value);
                ReportPropertyChanging("PROXIMO_WAY_POINT");
                _PROXIMO_WAY_POINT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PROXIMO_WAY_POINT");
                OnPROXIMO_WAY_POINTChanged();
            }
        }
        private Nullable<global::System.Int32> _PROXIMO_WAY_POINT;
        partial void OnPROXIMO_WAY_POINTChanging(Nullable<global::System.Int32> value);
        partial void OnPROXIMO_WAY_POINTChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("planeinfoModel", "FK_FLIGHT_DATA_FLIGHT", "FLIGHT")]
        public FLIGHT FLIGHT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FLIGHT>("planeinfoModel.FK_FLIGHT_DATA_FLIGHT", "FLIGHT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FLIGHT>("planeinfoModel.FK_FLIGHT_DATA_FLIGHT", "FLIGHT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FLIGHT> FLIGHTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FLIGHT>("planeinfoModel.FK_FLIGHT_DATA_FLIGHT", "FLIGHT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FLIGHT>("planeinfoModel.FK_FLIGHT_DATA_FLIGHT", "FLIGHT", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="planeinfoModel", Name="PLANE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PLANE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PLANE object.
        /// </summary>
        /// <param name="iD_PLANE">Initial value of the ID_PLANE property.</param>
        /// <param name="dESC">Initial value of the DESC property.</param>
        public static PLANE CreatePLANE(global::System.Int32 iD_PLANE, global::System.String dESC)
        {
            PLANE pLANE = new PLANE();
            pLANE.ID_PLANE = iD_PLANE;
            pLANE.DESC = dESC;
            return pLANE;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_PLANE
        {
            get
            {
                return _ID_PLANE;
            }
            set
            {
                if (_ID_PLANE != value)
                {
                    OnID_PLANEChanging(value);
                    ReportPropertyChanging("ID_PLANE");
                    _ID_PLANE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_PLANE");
                    OnID_PLANEChanged();
                }
            }
        }
        private global::System.Int32 _ID_PLANE;
        partial void OnID_PLANEChanging(global::System.Int32 value);
        partial void OnID_PLANEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DESC
        {
            get
            {
                return _DESC;
            }
            set
            {
                OnDESCChanging(value);
                ReportPropertyChanging("DESC");
                _DESC = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DESC");
                OnDESCChanged();
            }
        }
        private global::System.String _DESC;
        partial void OnDESCChanging(global::System.String value);
        partial void OnDESCChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("planeinfoModel", "FK_PLANE_CONFIG_PLANE", "PLANE_CONFIG")]
        public EntityCollection<PLANE_CONFIG> PLANE_CONFIG
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PLANE_CONFIG>("planeinfoModel.FK_PLANE_CONFIG_PLANE", "PLANE_CONFIG");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PLANE_CONFIG>("planeinfoModel.FK_PLANE_CONFIG_PLANE", "PLANE_CONFIG", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="planeinfoModel", Name="PLANE_CONFIG")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PLANE_CONFIG : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PLANE_CONFIG object.
        /// </summary>
        /// <param name="iD_CONFIG">Initial value of the ID_CONFIG property.</param>
        /// <param name="iD_PLANE">Initial value of the ID_PLANE property.</param>
        /// <param name="iD_BATTERY">Initial value of the ID_BATTERY property.</param>
        /// <param name="iD_ENGINE">Initial value of the ID_ENGINE property.</param>
        /// <param name="iD_ESC">Initial value of the ID_ESC property.</param>
        /// <param name="iD_RADIO">Initial value of the ID_RADIO property.</param>
        public static PLANE_CONFIG CreatePLANE_CONFIG(global::System.Int32 iD_CONFIG, global::System.Int32 iD_PLANE, global::System.Int32 iD_BATTERY, global::System.Int32 iD_ENGINE, global::System.Int32 iD_ESC, global::System.Int32 iD_RADIO)
        {
            PLANE_CONFIG pLANE_CONFIG = new PLANE_CONFIG();
            pLANE_CONFIG.ID_CONFIG = iD_CONFIG;
            pLANE_CONFIG.ID_PLANE = iD_PLANE;
            pLANE_CONFIG.ID_BATTERY = iD_BATTERY;
            pLANE_CONFIG.ID_ENGINE = iD_ENGINE;
            pLANE_CONFIG.ID_ESC = iD_ESC;
            pLANE_CONFIG.ID_RADIO = iD_RADIO;
            return pLANE_CONFIG;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_CONFIG
        {
            get
            {
                return _ID_CONFIG;
            }
            set
            {
                if (_ID_CONFIG != value)
                {
                    OnID_CONFIGChanging(value);
                    ReportPropertyChanging("ID_CONFIG");
                    _ID_CONFIG = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_CONFIG");
                    OnID_CONFIGChanged();
                }
            }
        }
        private global::System.Int32 _ID_CONFIG;
        partial void OnID_CONFIGChanging(global::System.Int32 value);
        partial void OnID_CONFIGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_PLANE
        {
            get
            {
                return _ID_PLANE;
            }
            set
            {
                OnID_PLANEChanging(value);
                ReportPropertyChanging("ID_PLANE");
                _ID_PLANE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID_PLANE");
                OnID_PLANEChanged();
            }
        }
        private global::System.Int32 _ID_PLANE;
        partial void OnID_PLANEChanging(global::System.Int32 value);
        partial void OnID_PLANEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_BATTERY
        {
            get
            {
                return _ID_BATTERY;
            }
            set
            {
                OnID_BATTERYChanging(value);
                ReportPropertyChanging("ID_BATTERY");
                _ID_BATTERY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID_BATTERY");
                OnID_BATTERYChanged();
            }
        }
        private global::System.Int32 _ID_BATTERY;
        partial void OnID_BATTERYChanging(global::System.Int32 value);
        partial void OnID_BATTERYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_ENGINE
        {
            get
            {
                return _ID_ENGINE;
            }
            set
            {
                OnID_ENGINEChanging(value);
                ReportPropertyChanging("ID_ENGINE");
                _ID_ENGINE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID_ENGINE");
                OnID_ENGINEChanged();
            }
        }
        private global::System.Int32 _ID_ENGINE;
        partial void OnID_ENGINEChanging(global::System.Int32 value);
        partial void OnID_ENGINEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_ESC
        {
            get
            {
                return _ID_ESC;
            }
            set
            {
                OnID_ESCChanging(value);
                ReportPropertyChanging("ID_ESC");
                _ID_ESC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID_ESC");
                OnID_ESCChanged();
            }
        }
        private global::System.Int32 _ID_ESC;
        partial void OnID_ESCChanging(global::System.Int32 value);
        partial void OnID_ESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_RADIO
        {
            get
            {
                return _ID_RADIO;
            }
            set
            {
                OnID_RADIOChanging(value);
                ReportPropertyChanging("ID_RADIO");
                _ID_RADIO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID_RADIO");
                OnID_RADIOChanged();
            }
        }
        private global::System.Int32 _ID_RADIO;
        partial void OnID_RADIOChanging(global::System.Int32 value);
        partial void OnID_RADIOChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("planeinfoModel", "FK_PLANE_CONFIG_BATTERY", "BATTERY")]
        public BATTERY BATTERY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BATTERY>("planeinfoModel.FK_PLANE_CONFIG_BATTERY", "BATTERY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BATTERY>("planeinfoModel.FK_PLANE_CONFIG_BATTERY", "BATTERY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BATTERY> BATTERYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BATTERY>("planeinfoModel.FK_PLANE_CONFIG_BATTERY", "BATTERY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BATTERY>("planeinfoModel.FK_PLANE_CONFIG_BATTERY", "BATTERY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("planeinfoModel", "FK_PLANE_CONFIG_ENGINE", "ENGINE")]
        public ENGINE ENGINE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ENGINE>("planeinfoModel.FK_PLANE_CONFIG_ENGINE", "ENGINE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ENGINE>("planeinfoModel.FK_PLANE_CONFIG_ENGINE", "ENGINE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ENGINE> ENGINEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ENGINE>("planeinfoModel.FK_PLANE_CONFIG_ENGINE", "ENGINE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ENGINE>("planeinfoModel.FK_PLANE_CONFIG_ENGINE", "ENGINE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("planeinfoModel", "FK_PLANE_CONFIG_ESC", "ESC")]
        public ESC ESC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ESC>("planeinfoModel.FK_PLANE_CONFIG_ESC", "ESC").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ESC>("planeinfoModel.FK_PLANE_CONFIG_ESC", "ESC").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ESC> ESCReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ESC>("planeinfoModel.FK_PLANE_CONFIG_ESC", "ESC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ESC>("planeinfoModel.FK_PLANE_CONFIG_ESC", "ESC", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("planeinfoModel", "FK_FLIGHT_PLANE_CONFIG", "FLIGHT")]
        public EntityCollection<FLIGHT> FLIGHT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FLIGHT>("planeinfoModel.FK_FLIGHT_PLANE_CONFIG", "FLIGHT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FLIGHT>("planeinfoModel.FK_FLIGHT_PLANE_CONFIG", "FLIGHT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("planeinfoModel", "FK_PLANE_CONFIG_PLANE", "PLANE")]
        public PLANE PLANE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PLANE>("planeinfoModel.FK_PLANE_CONFIG_PLANE", "PLANE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PLANE>("planeinfoModel.FK_PLANE_CONFIG_PLANE", "PLANE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PLANE> PLANEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PLANE>("planeinfoModel.FK_PLANE_CONFIG_PLANE", "PLANE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PLANE>("planeinfoModel.FK_PLANE_CONFIG_PLANE", "PLANE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("planeinfoModel", "FK_PLANE_CONFIG_RADIO", "RADIO")]
        public RADIO RADIO
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RADIO>("planeinfoModel.FK_PLANE_CONFIG_RADIO", "RADIO").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RADIO>("planeinfoModel.FK_PLANE_CONFIG_RADIO", "RADIO").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RADIO> RADIOReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RADIO>("planeinfoModel.FK_PLANE_CONFIG_RADIO", "RADIO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RADIO>("planeinfoModel.FK_PLANE_CONFIG_RADIO", "RADIO", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="planeinfoModel", Name="RADIO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RADIO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RADIO object.
        /// </summary>
        /// <param name="iD_RADIO">Initial value of the ID_RADIO property.</param>
        /// <param name="dESC">Initial value of the DESC property.</param>
        public static RADIO CreateRADIO(global::System.Int32 iD_RADIO, global::System.String dESC)
        {
            RADIO rADIO = new RADIO();
            rADIO.ID_RADIO = iD_RADIO;
            rADIO.DESC = dESC;
            return rADIO;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_RADIO
        {
            get
            {
                return _ID_RADIO;
            }
            set
            {
                if (_ID_RADIO != value)
                {
                    OnID_RADIOChanging(value);
                    ReportPropertyChanging("ID_RADIO");
                    _ID_RADIO = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_RADIO");
                    OnID_RADIOChanged();
                }
            }
        }
        private global::System.Int32 _ID_RADIO;
        partial void OnID_RADIOChanging(global::System.Int32 value);
        partial void OnID_RADIOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DESC
        {
            get
            {
                return _DESC;
            }
            set
            {
                OnDESCChanging(value);
                ReportPropertyChanging("DESC");
                _DESC = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DESC");
                OnDESCChanged();
            }
        }
        private global::System.String _DESC;
        partial void OnDESCChanging(global::System.String value);
        partial void OnDESCChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("planeinfoModel", "FK_PLANE_CONFIG_RADIO", "PLANE_CONFIG")]
        public EntityCollection<PLANE_CONFIG> PLANE_CONFIG
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PLANE_CONFIG>("planeinfoModel.FK_PLANE_CONFIG_RADIO", "PLANE_CONFIG");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PLANE_CONFIG>("planeinfoModel.FK_PLANE_CONFIG_RADIO", "PLANE_CONFIG", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
